enum category{
	Shirts
 	Jeans
	Jackets 
	Sweaters
	Accessories
}

type Issue {
  _id : ID!
  id: Int!
  name: String!
  category: category!
  price: Float
  image: String
}
type IssueCounts {
	count: Int
}

"Toned down Issue, used as inputs, without server generated values."
input IssueInputs {
  name: String
  "Optional, if not supplied, will be set to 'Shirts'"
  category: category
  price: Float
  image: String
}
"""Inputs for issueUpdate: all are optional. Whichever is specified will
be set to the given value, undefined fields will remain unmodified."""
input IssueUpdateInputs {
name: String
category: category
price: Float
image: String
}

##### Top level declarations

type Query {
  about: String!
  issueList: [Issue!]!
  issue(id: Int!): Issue!
  issueCounts:[IssueCounts!]
}

type Mutation {
  setAboutMessage(message: String!): String
  issueAdd(issue: IssueInputs!): Issue!
  issueUpdate(id: Int!, changes: IssueUpdateInputs!): Issue!
  issueDelete(id: Int!): Boolean!
}
